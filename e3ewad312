// Полиморфизм.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include <iostream>
using namespace std;

class Graph1
{
protected:
	int n;
	int ** a;
public:
	Graph1(int n)
	{
		this->n;			
		a = new int *[n];
		for (int i = 0; i < n; i++)
		{
			a[i] = new int[n];
			for (int j = 0; j < n; j++)
				a[i][j] = 0;
		}
	}
	virtual void Input()
	{ 
		cout << "graph 1" << endl;
		for (int i = 0; i < n - 1; i++)
		{
			for (int j = i + 1; j < n; j++)
			{
				cin >> a[i][j];
				a[j][i] = a[i][j];
			}
		}
	}
	virtual void Print()
	{
		cout << "graph 1" << endl;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
				cout << a[i][j] << " ";
			cout << endl;
		}
	}

};

class Graph2 :public Graph1
{
	int m;
public:
	Graph2(int n, int m):Graph1(n)
	{
		this->m = m;
		CreateMatrix();
	}
	void CreateMatrix()
	{
		a = new int*[2];
		for (int i = 0; i < 2; i++)
		{
			a[i] = new int[m];
			for (int j = 0; j < m; j++)
				a[i][j] = 0;
		}
	}
	void Input()
	{
		cout << "graph 2" << endl;
		for (int j = 0; j < m; j++)
		{
			for (int i = 0; i < 2; i++)
				cin >> a[i][j];
		}
	}
	void Print()
	{
		cout << "graph 2" << endl;
		for (int i = 0; i < 2; i++)
		{
			for (int j = 0; j < m; j++)
				cout << a[i][j] << " " ;
			cout << endl;
		}
	}

};


int main()
{
	/*Graph1 gr(4);
	gr.Input();
	gr.Print();
	system("pause");
	*/
	/*Graph2 gr2(4,3);
	gr2.Input();
	gr2.Print();
	system("pause");
	*/
	Graph1* gr2 = new Graph2(4, 3);
	gr2->Input();
	gr2->Print();
	delete gr2;
	system("pause");

}

